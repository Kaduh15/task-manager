services:
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile.dev
    container_name: api
    command: sh -c "npm run db:generate && npm run db:migrate && npm run dev"
    ports:
      - ${PORT:-3001}:3000
    restart: unless-stopped
    environment:
      PORT: 3000
      DATABASE_URL: ${DATABASE_URL:-file:./dev.db}
      JWT_SECRET: ${JWT_SECRET:-secret}
      URL_DEPLOY: ${URL_DEPLOY:-http://localhost:${PORT:-3001}}
    volumes:
      - ./apps/api/src:/app/src
      - ./apps/api/prisma/:/app/prisma/
      - ./apps/api/docs:/app/docs
    healthcheck:
      test: [ "CMD", "lsof", "-t", "-i:3000" ]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    networks:
      - app_net

  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile.dev
    container_name: web
    ports:
      - ${PORT:-3002}:3000
    restart: unless-stopped
    environment:
      PORT: 3000
      NEXT_PUBLIC_API_URL: ${API_URL:-http://api:3000}
    volumes:
      - ./apps/web/src:/app/src
    healthcheck:
      test: [ "CMD", "lsof", "-t", "-i:3000" ]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    networks:
      - app_net
    depends_on:
      api:
        condition: service_healthy

networks:
  app_net:
    driver: bridge
